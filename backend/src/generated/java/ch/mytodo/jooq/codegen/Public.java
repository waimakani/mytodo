/*
 * This file is generated by jOOQ.
*/
package ch.mytodo.jooq.codegen;


import ch.mytodo.jooq.codegen.tables.SchemaVersion;
import ch.mytodo.jooq.codegen.tables.ToDo;
import ch.mytodo.jooq.codegen.tables.ToDoList;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1853139187;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.TO_DO</code>.
     */
    public final ToDo TO_DO = ch.mytodo.jooq.codegen.tables.ToDo.TO_DO;

    /**
     * The table <code>PUBLIC.TO_DO_LIST</code>.
     */
    public final ToDoList TO_DO_LIST = ch.mytodo.jooq.codegen.tables.ToDoList.TO_DO_LIST;

    /**
     * The table <code>PUBLIC.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = ch.mytodo.jooq.codegen.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.SYSTEM_SEQUENCE_C66728F1_6111_4884_B87E_3781FC49442E,
            Sequences.SYSTEM_SEQUENCE_CE6C760C_4C09_454B_A422_2503A75FE3BF);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            ToDo.TO_DO,
            ToDoList.TO_DO_LIST,
            SchemaVersion.SCHEMA_VERSION);
    }
}
